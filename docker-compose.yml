version: '3.8'

services:

  redis:                                        #LRU y LFU
    image: redis:latest               # descomentar y comentar la otra para cambiar la politica:
    command: redis-server --maxmemory 10gb --maxmemory-policy allkeys-lru # allkeys-lfu
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  cache:
    build: ./cache
    ports:
      - "8001:8001"
    depends_on:
      - redis
      - almacenamiento
    environment:
      - TTL_CACHE=86400
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - STORAGE_SERVICE_URL=http://almacenamiento:8000
  

  almacenamiento:
    build: ./almacenamiento
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_CLUSTER}/${MONGO_DB}?retryWrites=true&w=majority&tls=true&authSource=admin
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_CLUSTER=${MONGO_CLUSTER}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}

  scraper:
    build:
      context: ./scraper
    environment:
      - URL_ALMACENAMIENTO=http://almacenamiento:8000/eventos
    depends_on:
     - almacenamiento

  filtro:
      build:
        context: ./filtro
        
      environment:
        - MONGO_URI=mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_CLUSTER}/${MONGO_DB}?retryWrites=true&w=majority&tls=true&authSource=admin
        - MONGO_USER=${MONGO_USER}
        - MONGO_PASSWORD=${MONGO_PASSWORD}
        - MONGO_CLUSTER=${MONGO_CLUSTER}
        - MONGO_DB=${MONGO_DB}
        - MONGO_COLLECTION=${MONGO_COLLECTION}
      volumes:
        - ./filtro/output:/app/output

  procesamiento:
    build: ./procesamiento
    volumes:
      - ./procesamiento/procesamiento.pig:/data/procesamiento.pig
      - ./filtro/output/eventos_filtrados.csv:/data/eventos_filtrados.csv
      - ./procesamiento/resultados:/data/resultados
    working_dir: /data
    command: pig -x local procesamiento.pig
    depends_on:
      - filtro

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
    mongodb_data:
    redis_data:
    esdata: